#!/bin/bash

echo "This script will equip your system with the rocket-chip implementation dated March 2nd, 2018"
echo "Please make sure:"
echo " 1. you've created a Virtual Machine as advised over at Learning Journey pages"
echo " 2. you've run setup_general.sh before running this script."
echo "For details, kindly take a look at README.md"
echo " "

export PROJ_NAME=F
# If $PROJ_NAME is NOT defined in .bashrc, you may define it as "export PROJ_NAME=F"

#if [ ! -d "$LJRC" ]; then
  # Let the user to enter the needed branch name. It can be master if wanted.
  #read -p "Enter the name of branch: " branchName
#fi

##########################################################
# Define the tool chain location.
##########################################################
if [ -z ${LJRC} ]; then
  export LJRC=${HOME}/learning-journey
fi

##########################################################
# Clone the project.
##########################################################
if [ ! -d "$LJRC" ]; then
  ##########################################################
  # Prepare the .gitconfig file - important for qemu
  ##########################################################
  cd 
  sed -i "\$a [url \"https://github.com/qemu/\"]" .gitconfig
  sed -i "\$a insteadOf = git://git.qemu-project.org/" .gitconfig
  sed -i "\$a [url \"git://cgit.freedesktop.org/pixman/\"]" .gitconfig
  sed -i "\$a insteadOf = https://anongit.freedesktop.org/pixman/" .gitconfig
  sed -i "\$a [url \"git://cgit.freedesktop.org/pixman/\"]" .gitconfig
  sed -i "\$a insteadOf = git://anongit.freedesktop.org/pixman'" .gitconfig
  ##########################################################
  # Clone and get the repository.
  ##########################################################
  mkdir $LJRC
  cd $LJRC
  git config --global credential.helper "cache --timeout=36000"
  git clone https://github.com/Intensivate/learning_journey_rocket_chip.git  
  cd learning_journey_rocket_chip
  git submodule update --init

  ##########################################################
  # Update .bashrc to include RISCV
  ##########################################################
  sed -i '/RISCV/d' ~/.bashrc
  sed -i '/ROCKETCHIP/d' ~/.bashrc
  sed -i '/LJRC/d' ~/.bashrc
  sed -i '/TOP/d' ~/.bashrc
  perl -i -p0e 's/\# AUTOGENERATED_CORE START.*?\# AUTOGENERATED_CORE END//s' ~/.bashrc

  echo >> ~/.bashrc
  echo \# AUTOGENERATED_CORE START >> ~/.bashrc
  echo export LJRC=${LJRC} >> ~/.bashrc
  echo  >> ~/.bashrc
  echo if [ \"\$PROJ_NAME\" == \"F\" ]\; then >> ~/.bashrc
  echo \ \ cd ${LJRC}/learning_journey_rocket_chip >> ~/.bashrc
  echo \ \ source set_env.sh >> ~/.bashrc
  echo fi >> ~/.bashrc
  echo \# AUTOGENERATED_CORE END >> ~/.bashrc
  echo >> ~/.bashrc

  ##########################################################
  # Build the needed tools.
  ##########################################################
  # Building the RISC-V cross-compilation tools
  cd $LJRC/learning_journey_rocket_chip
  source $LJRC/learning_journey_rocket_chip/set_env.sh
  cd riscv-tools
  git submodule update --init --recursive
  ./build.sh
  rm -rf riscv-gnu-toolchain/build

  ##########################################################
  # Set up Verilator.
  ##########################################################

  cd $LJRC/learning_journey_rocket_chip
  source $LJRC/learning_journey_rocket_chip/set_env.sh
  cd $LJRC/learning_journey_rocket_chip/emulator
  make
  mkdir -p $VERILATOR_ROOT/include
  ln -s $VERILATOR_ROOT/share/verilator/include $VERILATOR_ROOT/include
  ln -s $VERILATOR_ROOT/share/verilator/include/* $VERILATOR_ROOT/include
  ln -s $VERILATOR_ROOT/share/verilator/bin/verilator_includer $VERILATOR_ROOT/bin/verilator_includer

  ##########################################################
  # Return back to the working area.
  ##########################################################
  # Back to normal configuration.
  . ~/.bashrc
  cd ${LJRC}

else
  cd ${LJRC}
  git pull
  git pull --recurse-submodules
  git pull
fi
